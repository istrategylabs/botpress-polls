{"version":3,"sources":["webpack:///webpack/bootstrap 05f696d70e056b594b24","webpack:///./src/index.js","webpack:///external \"moment-timezone\"","webpack:///external \"redis\"","webpack:///./src/cms.js","webpack:///external \"bluebird\""],"names":["moment","require","redis","cms","module","exports","config","init","bp","configurator","ready","client","createClient","process","env","REDIS_URL","todaysDate","tz","Date","pollList","getContent","items","i","length","poll","hashtag","data","code","options","j","getAsync","format","count","push","name","quit","getPolls","router","getRouter","auth","get","req","res","then","send","polls","loadAll","category","rkey","content","JSON","parse","contentManager","listCategoryItems","setAsync","stringify","P","promisifyAll","RedisClient","prototype","Multi"],"mappings":"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","file":"node.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 05f696d70e056b594b24","const moment = require('moment-timezone')\nconst redis = require('redis')\n\nconst cms = require('./cms.js')\n\n/*\n  Botpress module template. This is your module's entry point.\n  Please have a look at the docs for more information about config, init and ready.\n  https://botpress.io/docs\n*/\n\nmodule.exports = {\n\n  config: { },\n\n  init: async function(bp, configurator) {\n    // This is called before ready.\n    // At this point your module is just being initialized, it is not loaded yet.\n  },\n\n  ready: async function(bp, configurator) {\n    // Your module's been loaded by Botpress.\n    // Serve your APIs here, execute logic, etc.\n\n    var router = bp.getRouter('botpress-polls', { auth: false })\n\n    // Will be exposed at: http://localhost:3000/api/botpress-polls/results\n\n    async function getPolls() {\n      let client = redis.createClient(process.env.REDIS_URL)\n      let todaysDate = moment.tz(new Date(), 'America/New_York')\n      let pollList = []\n\n      let items = await cms.getContent(bp, 'polls')\n      for (let i = 0; i < items.length; i++) {\n        let poll = {\n          hashtag: items[i].data.code,\n          options: []\n        }\n        for (let j = 0; j < 3; j++) {\n          let count = await client.getAsync(`count:${items[i].data.code}-${todaysDate.format('YYYYMMDD')}:${j + 1}`) || 0\n          poll.options.push({ name: items[i]['data'][`option${j + 1}`], count: count })\n        }\n        pollList.push(poll)\n      }\n      client.quit()\n      return pollList\n    }\n\n    router.get('/results', (req, res) => {\n      getPolls().then((pollList) => {\n        res.send({\n          polls: pollList,\n        })\n      })\n    })\n\n    const config = await configurator.loadAll()\n    // Do fancy stuff here :)\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"moment-timezone\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"moment-timezone\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"redis\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"redis\"\n// module id = 3\n// module chunks = 0","const P = require('bluebird')\nconst redis = require('redis')\nP.promisifyAll(redis.RedisClient.prototype)\nP.promisifyAll(redis.Multi.prototype)\n\nasync function getContent (bp, category) {\n  // get content from cache. hit db if no cache data available\n  let client = redis.createClient(process.env.REDIS_URL)\n  let rkey = `content-${category}`\n\n  let content = await client.getAsync(rkey)\n  if (content) {\n    client.quit()\n    return JSON.parse(content)\n  } else {\n    content = await bp.contentManager.listCategoryItems(category)\n    await client.setAsync(rkey, JSON.stringify(content), 'EX', 60 * 5)\n    client.quit()\n    return content\n  }\n}\n\nmodule.exports = {\n  getContent\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/cms.js","module.exports = require(\"bluebird\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bluebird\"\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}